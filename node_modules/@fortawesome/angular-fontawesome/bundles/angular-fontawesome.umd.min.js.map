{"version":3,"file":"angular-fontawesome.umd.min.js","sources":["../../build/shared/utils/is-icon-lookup.util.ts","../../build/shared/utils/normalize-icon-spec.util.ts","../../build/shared/utils/object-with-keys.util.ts","../../build/shared/utils/classlist.util.ts","../../build/shared/errors/not-found-icon-html.ts","../../build/icon/icon.component.ts","../../build/shared/errors/warn-if-icon-spec-missing.ts","../../build/shared/errors/warn-if-icon-html-missing.ts","../../build/layers/layers.component.ts","../../build/shared/errors/warn-if-parent-not-exist.ts","../../build/layers/layers-text-base.component.ts","../../build/layers/layers-text.component.ts","../../build/layers/layers-counter.component.ts","../../build/fontawesome.module.ts"],"sourcesContent":["import {IconLookup, IconProp} from '@fortawesome/fontawesome-svg-core';\n\n/**\n * Returns if is IconLookup or not.\n * @returns IconLookup\n */\nexport const isIconLookup = (i: IconProp): i is IconLookup => {\n  return (<IconLookup>i).prefix !== undefined && (<IconLookup>i).iconName !== undefined;\n};\n","import { IconLookup, IconProp } from '@fortawesome/fontawesome-svg-core';\n\nimport { isIconLookup } from './is-icon-lookup.util';\n\n/**\n * Normalizing icon spec.\n * @returns IconLookup\n */\nexport const faNormalizeIconSpec = (iconSpec: IconProp): IconLookup => {\n  const defaultPrefix = 'fas';\n\n  if (typeof iconSpec === 'undefined' || iconSpec === null) {\n    return null;\n  }\n\n  if (isIconLookup(iconSpec)) {\n    return iconSpec;\n  }\n\n  if (Array.isArray(iconSpec) && (<Array<string>>iconSpec).length === 2) {\n    return { prefix: iconSpec[0], iconName: iconSpec[1] };\n  }\n\n  if (typeof iconSpec === 'string') {\n    return { prefix: defaultPrefix, iconName: iconSpec };\n  }\n};\n","/**\n * @param T value\n */\nexport const objectWithKey = <T>(key: string, value: T): {[id: string]: T} => {\n  return (Array.isArray(value) && value.length > 0) || (!Array.isArray(value) && value) ? { [key]: value } : {};\n};\n","import { FaProps } from '../models/props.model';\n\n/**\n * Fontawesome class list.\n * Returns classes array by props.\n * @returns string[]\n */\nexport const faClassList = (props: FaProps): string[] => {\n  const classes = {\n    'fa-spin': props.spin,\n    'fa-pulse': props.pulse,\n    'fa-fw': props.fixedWidth,\n    'fa-border': props.border,\n    'fa-li': props.listItem,\n    'fa-inverse': props.inverse,\n    'fa-layers-counter': props.counter,\n    'fa-flip-horizontal': props.flip === 'horizontal' || props.flip === 'both',\n    'fa-flip-vertical': props.flip === 'vertical' || props.flip === 'both',\n    [`fa-${props.size}`]: props.size !== null,\n    [`fa-rotate-${props.rotate}`]: props.rotate !== null,\n    [`fa-pull-${props.pull}`]: props.pull !== null\n  };\n\n  return Object.keys(classes)\n    .map(key => (classes[key] ? key : null))\n    .filter(key => key);\n};\n","import { config } from '@fortawesome/fontawesome-svg-core';\n\nexport const faNotFoundIconHtml = `<svg class=\"${config.replacementClass}\" viewBox=\"0 0 448 512\"></svg><!--icon not found-->`;\n","import {\n  Input,\n  OnChanges,\n  Component,\n  HostBinding,\n  SimpleChanges\n} from '@angular/core';\nimport {\n  icon,\n  Icon,\n  parse,\n  Styles,\n  PullProp,\n  IconProp,\n  SizeProp,\n  FlipProp,\n  FaSymbol,\n  Transform,\n  IconParams,\n  IconLookup,\n  RotateProp\n} from '@fortawesome/fontawesome-svg-core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { faNormalizeIconSpec } from '../shared/utils/normalize-icon-spec.util';\nimport { FaProps } from '../shared/models/props.model';\nimport { objectWithKey } from '../shared/utils/object-with-keys.util';\nimport { faClassList } from '../shared/utils/classlist.util';\nimport { faWarnIfIconHtmlMissing } from '../shared/errors/warn-if-icon-html-missing';\nimport { faWarnIfIconSpecMissing } from '../shared/errors/warn-if-icon-spec-missing';\nimport { faNotFoundIconHtml } from '../shared/errors/not-found-icon-html';\n\n/**\n * Fontawesome icon.\n */\n@Component({\n  selector: 'fa-icon',\n  template: ``,\n  host: {\n    class: 'ng-fa-icon',\n  }\n})\nexport class FaIconComponent implements OnChanges {\n  public icon: Icon;\n\n  @HostBinding('innerHTML')\n  public renderedIconHTML: SafeHtml;\n\n  constructor(private sanitizer: DomSanitizer) {}\n\n  private params: IconParams;\n  private iconSpec: IconLookup;\n\n  // tslint:disable-next-line:no-input-rename\n  @Input('icon') private iconProp: IconProp;\n  @Input() private title?: string;\n  @Input() private spin?: boolean;\n  @Input() private pulse?: boolean;\n  @Input() private mask?: IconProp;\n  @Input() private styles?: Styles;\n  @Input() private flip?: FlipProp;\n  @Input() private size?: SizeProp;\n  @Input() private pull?: PullProp;\n  @Input() private border?: boolean;\n  @Input() private inverse?: boolean;\n  @Input() private symbol?: FaSymbol;\n  @Input() private listItem?: boolean;\n  @Input() private rotate?: RotateProp;\n  @Input() private fixedWidth?: boolean;\n  @Input() private classes?: string[] = [];\n  @Input() private transform?: string | Transform;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes) {\n      this.updateIconSpec();\n      this.updateParams();\n      this.updateIcon();\n      this.renderIcon();\n    }\n  }\n\n  /**\n   * Updating icon spec.\n   */\n  private updateIconSpec() {\n    this.iconSpec = faNormalizeIconSpec(this.iconProp);\n  }\n\n  /**\n   * Updating params by component props.\n   */\n  private updateParams() {\n    const classOpts: FaProps = {\n      flip: this.flip,\n      spin: this.spin,\n      pulse: this.pulse,\n      border: this.border,\n      inverse: this.inverse,\n      listItem: this.listItem,\n      size: this.size || null,\n      pull: this.pull || null,\n      rotate: this.rotate || null,\n      fixedWidth: this.fixedWidth\n    };\n\n    const classes = objectWithKey('classes', [...faClassList(classOpts), ...this.classes]);\n    const mask = objectWithKey('mask', faNormalizeIconSpec(this.mask));\n    const parsedTransform = typeof this.transform === 'string' ? parse.transform(this.transform) : this.transform;\n    const transform = objectWithKey('transform', parsedTransform);\n\n    this.params = {\n      title: this.title,\n      ...transform,\n      ...classes,\n      ...mask,\n      styles: this.styles,\n      symbol: this.symbol\n    };\n  }\n\n  /**\n   * Updating icon by params and icon spec.\n   */\n  private updateIcon() {\n    this.icon = icon(this.iconSpec, this.params);\n  }\n\n  /**\n   * Rendering icon.\n   */\n  private renderIcon() {\n    faWarnIfIconSpecMissing(this.iconSpec);\n    faWarnIfIconHtmlMissing(this.icon, this.iconSpec);\n\n    this.renderedIconHTML = this.sanitizer.bypassSecurityTrustHtml(\n      this.icon ? this.icon.html.join('\\n') : faNotFoundIconHtml\n    );\n  }\n}\n\n","import { IconLookup } from '@fortawesome/fontawesome-svg-core';\n\nexport const faWarnIfIconSpecMissing = (iconSpec: IconLookup) => {\n  if (!iconSpec) {\n    console.error('FontAwesome: Could not find icon. ' +\n      `It looks like you've provided a null or undefined icon object to this component.`);\n  }\n};\n","import { Icon, IconLookup } from '@fortawesome/fontawesome-svg-core';\n\nexport const faWarnIfIconHtmlMissing = (iconObj: Icon, iconSpec: IconLookup) => {\n  if (iconSpec && !iconObj) {\n    console.error(`FontAwesome: Could not find icon with iconName=${iconSpec.iconName} and prefix=${iconSpec.prefix}`);\n  }\n};\n","import { Component } from '@angular/core';\n\n/**\n * Fontawesome layers.\n */\n@Component({\n  selector: 'fa-layers',\n  template: `<ng-content select=\"fa-icon, fa-layers-text, fa-layers-counter\"></ng-content>`,\n  host: {\n    class: 'fa-layers'\n  }\n})\nexport class FaLayersComponent {\n}\n\n","/**\n * Warns if parent component not existing.\n */\nexport const faWarnIfParentNotExist = (parent: any, parentName: string, childName: string) => {\n  if (!parent) {\n    console.error(`FontAwesome: ${childName} should be used as child of ${parentName} only.`);\n  }\n};\n","import {\n  Input,\n  Inject,\n  Injectable,\n  Optional,\n  OnChanges,\n  forwardRef,\n  HostBinding,\n  SimpleChanges\n} from '@angular/core';\nimport {\n  Styles,\n  FontawesomeObject,\n  TextParams\n} from '@fortawesome/fontawesome-svg-core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { FaLayersComponent } from './layers.component';\nimport { faWarnIfParentNotExist } from '../shared/errors/warn-if-parent-not-exist';\n\n@Injectable()\nexport abstract class FaLayersTextBaseComponent implements OnChanges {\n\n  @HostBinding('innerHTML')\n  public renderedHTML: SafeHtml;\n\n  constructor(@Inject(forwardRef(() => FaLayersComponent)) @Optional() private parent: FaLayersComponent,\n    private sanitizer: DomSanitizer) {\n\n    faWarnIfParentNotExist(this.parent, 'FaLayersComponent', this.constructor.name);\n  }\n\n  protected params: TextParams;\n\n  @Input() protected content: string;\n  @Input() protected title?: string;\n  @Input() protected styles?: Styles;\n  @Input() protected classes?: string[] = [];\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes) {\n      this.updateParams();\n      this.updateContent();\n    }\n  }\n\n  /**\n   * Updating params by component props.\n   */\n  protected abstract updateParams(): void;\n\n  /**\n   * Render the FontawesomeObject using the content and params.\n   */\n  protected abstract renderFontawesomeObject(content: string | number, params?: TextParams): FontawesomeObject;\n\n  /**\n   * Updating content by params and content.\n   */\n  private updateContent() {\n    this.renderedHTML = this.sanitizer.bypassSecurityTrustHtml(\n      this.renderFontawesomeObject(this.content || '', this.params).html.join('\\n')\n    );\n  }\n}\n\n","import {\n  Input,\n  Component,\n  HostBinding\n} from '@angular/core';\nimport {\n  text,\n  parse,\n  Text,\n  TextParams,\n  SizeProp,\n  FlipProp,\n  PullProp,\n  Transform,\n  RotateProp\n} from '@fortawesome/fontawesome-svg-core';\nimport { FaLayersTextBaseComponent } from './layers-text-base.component';\n\nimport { FaProps } from '../shared/models/props.model';\nimport { objectWithKey } from '../shared/utils/object-with-keys.util';\nimport { faClassList } from '../shared/utils/classlist.util';\n\n/**\n * Fontawesome layers text.\n */\n@Component({\n  selector: 'fa-layers-text',\n  template: '',\n  host: {\n    class: 'ng-fa-layers-text'\n  }\n})\nexport class FaLayersTextComponent extends FaLayersTextBaseComponent {\n\n  @Input() private spin?: boolean;\n  @Input() private pulse?: boolean;\n  @Input() private flip?: FlipProp;\n  @Input() private size?: SizeProp;\n  @Input() private pull?: PullProp;\n  @Input() private border?: boolean;\n  @Input() private inverse?: boolean;\n  @Input() private listItem?: boolean;\n  @Input() private rotate?: RotateProp;\n  @Input() private fixedWidth?: boolean;\n  @Input() private transform?: string | Transform;\n\n  /**\n   * Updating params by component props.\n   */\n  protected updateParams() {\n    const classOpts: FaProps = {\n      flip: this.flip,\n      spin: this.spin,\n      pulse: this.pulse,\n      border: this.border,\n      inverse: this.inverse,\n      listItem: this.listItem,\n      size: this.size || null,\n      pull: this.pull || null,\n      rotate: this.rotate || null,\n      fixedWidth: this.fixedWidth\n    };\n\n    const classes = objectWithKey('classes', [...faClassList(classOpts), ...this.classes]);\n    const parsedTransform = typeof this.transform === 'string' ? parse.transform(this.transform) : this.transform;\n    const transform = objectWithKey('transform', parsedTransform);\n\n    this.params = {\n      ...transform,\n      ...classes,\n      title: this.title,\n      styles: this.styles\n    };\n  }\n\n  protected renderFontawesomeObject(content: string, params?: TextParams) {\n    return text(content, params);\n  }\n}\n\n","import {\n  Component,\n  HostBinding\n} from '@angular/core';\nimport {\n  counter,\n  Counter,\n  CounterParams,\n} from '@fortawesome/fontawesome-svg-core';\nimport { FaLayersTextBaseComponent } from './layers-text-base.component';\n\n/**\n * Fontawesome layers counter.\n */\n@Component({\n  selector: 'fa-layers-counter',\n  template: '',\n  host: {\n    class: 'ng-fa-layers-counter'\n  }\n})\nexport class FaLayersCounterComponent extends FaLayersTextBaseComponent {\n\n  /**\n   * Updating params by component props.\n   */\n  protected updateParams() {\n    this.params = {\n      title: this.title,\n      classes: this.classes,\n      styles: this.styles,\n    };\n  }\n\n  protected renderFontawesomeObject(content: string | number, params?: CounterParams) {\n    return counter(content, params);\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FaIconComponent } from './icon/icon.component';\nimport { FaLayersComponent } from './layers/layers.component';\nimport { FaLayersTextComponent } from './layers/layers-text.component';\nimport { FaLayersCounterComponent } from './layers/layers-counter.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    FaIconComponent,\n    FaLayersComponent,\n    FaLayersTextComponent,\n    FaLayersCounterComponent\n  ],\n  exports: [\n    FaIconComponent,\n    FaLayersComponent,\n    FaLayersTextComponent,\n    FaLayersCounterComponent\n  ],\n})\nexport class FontAwesomeModule {\n}\n"],"names":["faNormalizeIconSpec","iconSpec","i","undefined","prefix","iconName","Array","isArray","length","objectWithKey","key","value","faClassList","props","classes","fa-spin","spin","fa-pulse","pulse","fa-fw","fixedWidth","fa-border","border","fa-li","listItem","fa-inverse","inverse","fa-layers-counter","counter","fa-flip-horizontal","flip","fa-flip-vertical","size","_a","rotate","pull","Object","keys","map","filter","faNotFoundIconHtml","config","replacementClass","sanitizer","this","FaIconComponent","changes","updateIconSpec","updateParams","updateIcon","renderIcon","iconProp","classOpts","mask","parsedTransform","transform","parse","params","title","styles","symbol","icon","iconObj","console","error","renderedIconHTML","bypassSecurityTrustHtml","html","join","Component","selector","template","host","class","DomSanitizer","HostBinding","Input","faWarnIfParentNotExist","parent","parentName","childName","constructor","name","FaLayersTextBaseComponent","updateContent","renderedHTML","renderFontawesomeObject","content","Injectable","FaLayersComponent","Inject","forwardRef","Optional","__extends","FaLayersTextComponent","text","FaLayersCounterComponent","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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"}